# Generated by Django 5.0.1 on 2025-06-20 16:37

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_level', models.CharField(choices=[('6eme', '6ème'), ('5eme', '5ème'), ('4eme', '4ème'), ('3eme', '3ème'), ('seconde', 'Seconde'), ('premiere', 'Première'), ('terminale', 'Terminale')], max_length=20)),
                ('current_average', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('attendance_rate', models.FloatField(default=100.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('behavior_score', models.FloatField(default=5.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('participation_score', models.FloatField(default=3.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('homework_completion_rate', models.FloatField(default=100.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil Étudiant',
                'verbose_name_plural': 'Profils Étudiants',
            },
        ),
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('risk_level', models.CharField(choices=[('low', 'Faible'), ('moderate', 'Modéré'), ('high', 'Élevé'), ('critical', 'Critique')], max_length=20)),
                ('risk_factors', models.JSONField(default=dict, help_text='Facteurs contribuant au risque')),
                ('confidence_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('prediction_horizon_days', models.IntegerField(default=30)),
                ('predicted_outcome', models.CharField(choices=[('stable', 'Stable'), ('at_risk', 'À risque'), ('likely_dropout', 'Décrochage probable')], max_length=50)),
                ('model_version', models.CharField(default='1.0', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_assessments', to='ai_core.studentprofile')),
            ],
            options={
                'verbose_name': 'Évaluation de Risque',
                'verbose_name_plural': 'Évaluations de Risque',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AppreciationGeneration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, help_text='Matière concernée', max_length=100)),
                ('appreciation_type', models.CharField(choices=[('bulletin', 'Bulletin scolaire'), ('subject', 'Matière spécifique'), ('behavior', 'Comportement'), ('progress', 'Progrès'), ('orientation', 'Orientation')], max_length=30)),
                ('tone', models.CharField(choices=[('positive', 'Positif'), ('neutral', 'Neutre'), ('constructive', 'Constructif'), ('encouraging', 'Encourageant')], default='constructive', max_length=20)),
                ('generated_text', models.TextField()),
                ('confidence_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('reviewed', 'Relu'), ('approved', 'Approuvé'), ('published', 'Publié'), ('rejected', 'Rejeté')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_appreciations', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_appreciations', to='ai_core.studentprofile')),
            ],
            options={
                'verbose_name': "Génération d'Appréciation",
                'verbose_name_plural': "Générations d'Appréciations",
                'ordering': ['-created_at'],
            },
        ),
    ]
