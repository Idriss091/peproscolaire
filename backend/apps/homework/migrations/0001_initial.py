# Generated by Django 5.0.1 on 2025-06-20 20:35

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('schools', '0001_initial'),
        ('timetable', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HomeworkType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('short_name', models.CharField(max_length=20, verbose_name='Abréviation')),
                ('icon', models.CharField(blank=True, help_text="Nom de l'icône Material Design", max_length=50, verbose_name='Icône')),
                ('default_duration_days', models.PositiveIntegerField(default=7, verbose_name='Délai par défaut (jours)')),
                ('color', models.CharField(default='#3498db', max_length=7, verbose_name='Couleur')),
            ],
            options={
                'verbose_name': 'Type de devoir',
                'verbose_name_plural': 'Types de devoirs',
                'db_table': 'homework_types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(verbose_name='Description détaillée')),
                ('instructions', models.TextField(blank=True, help_text='Consignes spécifiques pour réaliser le devoir', verbose_name='Instructions')),
                ('assigned_date', models.DateField(default=django.utils.timezone.now, verbose_name='Date de distribution')),
                ('due_date', models.DateField(verbose_name='Date de rendu')),
                ('estimated_duration_minutes', models.PositiveIntegerField(default=30, verbose_name='Durée estimée (minutes)')),
                ('difficulty', models.CharField(choices=[('easy', 'Facile'), ('medium', 'Moyen'), ('hard', 'Difficile')], default='medium', max_length=10, verbose_name='Difficulté')),
                ('is_graded', models.BooleanField(default=False, verbose_name='Noté')),
                ('allow_late_submission', models.BooleanField(default=True, verbose_name='Rendu en retard autorisé')),
                ('submission_type', models.CharField(choices=[('paper', 'Papier'), ('digital', 'Numérique'), ('both', 'Les deux'), ('none', 'Pas de rendu')], default='paper', max_length=20, verbose_name='Type de rendu')),
                ('max_file_size_mb', models.PositiveIntegerField(default=10, verbose_name='Taille max fichier (MB)')),
                ('allowed_file_types', models.CharField(default='pdf,doc,docx,jpg,png', help_text='Extensions séparées par des virgules', max_length=200, verbose_name='Types de fichiers autorisés')),
                ('is_ai_suggested', models.BooleanField(default=False, verbose_name="Suggéré par l'IA")),
                ('ai_suggestion_data', models.JSONField(blank=True, default=dict, verbose_name='Données de suggestion IA')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de vues')),
                ('class_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homework_assignments', to='schools.class')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homework_assignments', to='timetable.subject')),
                ('teacher', models.ForeignKey(limit_choices_to={'user_type': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_homework', to=settings.AUTH_USER_MODEL)),
                ('homework_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assignments', to='homework.homeworktype')),
            ],
            options={
                'verbose_name': 'Devoir',
                'verbose_name_plural': 'Devoirs',
                'db_table': 'homework',
                'ordering': ['due_date', 'subject'],
            },
        ),
        migrations.CreateModel(
            name='HomeworkTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, verbose_name='Nom du modèle')),
                ('chapter', models.CharField(blank=True, max_length=200, verbose_name='Chapitre')),
                ('level', models.CharField(blank=True, help_text='Ex: 6ème, 2nde...', max_length=50, verbose_name='Niveau')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('instructions', models.TextField(blank=True)),
                ('estimated_duration_minutes', models.PositiveIntegerField(default=30)),
                ('difficulty', models.CharField(choices=[('easy', 'Facile'), ('medium', 'Moyen'), ('hard', 'Difficile')], default='medium', max_length=10)),
                ('tags', models.CharField(blank=True, help_text='Mots-clés séparés par des virgules', max_length=500, verbose_name='Tags')),
                ('use_count', models.PositiveIntegerField(default=0, verbose_name="Nombre d'utilisations")),
                ('is_shared', models.BooleanField(default=False, verbose_name="Partagé avec d'autres professeurs")),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homework_templates', to='timetable.subject')),
                ('teacher', models.ForeignKey(limit_choices_to={'user_type': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, related_name='homework_templates', to=settings.AUTH_USER_MODEL)),
                ('homework_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='homework.homeworktype')),
            ],
            options={
                'verbose_name': 'Modèle de devoir',
                'verbose_name_plural': 'Modèles de devoirs',
                'db_table': 'homework_templates',
                'ordering': ['-use_count', 'name'],
            },
        ),
        migrations.CreateModel(
            name='LessonContent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField(verbose_name='Date du cours')),
                ('title', models.CharField(max_length=200, verbose_name='Titre de la séance')),
                ('objectives', models.TextField(blank=True, verbose_name='Objectifs pédagogiques')),
                ('content', models.TextField(help_text='Ce qui a été fait pendant la séance', verbose_name='Contenu du cours')),
                ('key_concepts', models.TextField(blank=True, help_text='Mots-clés, formules, définitions importantes', verbose_name='Notions clés')),
                ('skills_worked', models.TextField(blank=True, verbose_name='Compétences travaillées')),
                ('duration_minutes', models.PositiveIntegerField(default=55, verbose_name='Durée (minutes)')),
                ('is_catch_up', models.BooleanField(default=False, verbose_name='Cours de rattrapage')),
                ('chapter', models.CharField(blank=True, max_length=200, verbose_name='Chapitre')),
                ('sequence_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Numéro de séquence')),
                ('validated', models.BooleanField(default=False, verbose_name="Validé par l'administration")),
                ('validated_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_lessons', to=settings.AUTH_USER_MODEL)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_contents', to='timetable.schedule')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_lessons', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Contenu de cours',
                'verbose_name_plural': 'Contenus de cours',
                'db_table': 'lesson_contents',
                'ordering': ['-date', 'schedule__time_slot__start_time'],
            },
        ),
        migrations.CreateModel(
            name='HomeworkResource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resource_type', models.CharField(choices=[('document', 'Document'), ('link', 'Lien'), ('video', 'Vidéo'), ('exercise', 'Exercice'), ('correction', 'Correction')], max_length=20, verbose_name='Type')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('file', models.FileField(blank=True, null=True, upload_to='homework/resources/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'ppt', 'pptx', 'xls', 'xlsx', 'jpg', 'png', 'mp4', 'avi'])], verbose_name='Fichier')),
                ('url', models.URLField(blank=True, max_length=500, verbose_name='Lien')),
                ('is_mandatory', models.BooleanField(default=False, verbose_name='Obligatoire')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('download_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de téléchargements')),
                ('homework', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='homework.homework')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_resources', to=settings.AUTH_USER_MODEL)),
                ('lesson_content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='homework.lessoncontent')),
            ],
            options={
                'verbose_name': 'Ressource',
                'verbose_name_plural': 'Ressources',
                'db_table': 'homework_resources',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.AddField(
            model_name='homework',
            name='lesson_content',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='homework_assignments', to='homework.lessoncontent'),
        ),
        migrations.CreateModel(
            name='StudentWork',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('submitted', 'Rendu'), ('late', 'En retard'), ('returned', 'Corrigé')], default='draft', max_length=20, verbose_name='Statut')),
                ('submitted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de rendu')),
                ('content', models.TextField(blank=True, verbose_name='Contenu texte')),
                ('file', models.FileField(blank=True, null=True, upload_to='homework/submissions/%Y/%m/', verbose_name='Fichier')),
                ('student_comment', models.TextField(blank=True, verbose_name="Commentaire de l'élève")),
                ('grade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Note')),
                ('teacher_comment', models.TextField(blank=True, verbose_name='Commentaire du professeur')),
                ('corrected_file', models.FileField(blank=True, null=True, upload_to='homework/corrections/%Y/%m/', verbose_name='Fichier corrigé')),
                ('corrected_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de correction')),
                ('time_spent_minutes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Temps passé (minutes)')),
                ('corrected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='corrected_homework', to=settings.AUTH_USER_MODEL)),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='homework.homework')),
                ('student', models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='homework_submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Travail d'élève",
                'verbose_name_plural': "Travaux d'élèves",
                'db_table': 'student_works',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkloadAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField(verbose_name="Date d'analyse")),
                ('total_homework_count', models.PositiveIntegerField(default=0, verbose_name='Nombre total de devoirs')),
                ('total_estimated_minutes', models.PositiveIntegerField(default=0, verbose_name='Temps total estimé (minutes)')),
                ('homework_by_subject', models.JSONField(default=dict, verbose_name='Devoirs par matière')),
                ('is_overloaded', models.BooleanField(default=False, verbose_name='Surcharge détectée')),
                ('overload_level', models.CharField(blank=True, choices=[('low', 'Faible'), ('medium', 'Moyen'), ('high', 'Élevé'), ('critical', 'Critique')], max_length=20, verbose_name='Niveau de surcharge')),
                ('recommendations', models.TextField(blank=True, verbose_name='Recommandations')),
                ('class_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workload_analyses', to='schools.class')),
            ],
            options={
                'verbose_name': 'Analyse de charge de travail',
                'verbose_name_plural': 'Analyses de charge de travail',
                'db_table': 'workload_analyses',
                'ordering': ['-date'],
            },
        ),
        migrations.AddIndex(
            model_name='lessoncontent',
            index=models.Index(fields=['date', 'schedule'], name='lesson_cont_date_d9d381_idx'),
        ),
        migrations.AddIndex(
            model_name='lessoncontent',
            index=models.Index(fields=['chapter', 'sequence_number'], name='lesson_cont_chapter_cabfdc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='lessoncontent',
            unique_together={('schedule', 'date')},
        ),
        migrations.AddIndex(
            model_name='homework',
            index=models.Index(fields=['due_date', 'class_group'], name='homework_due_dat_ab8f7a_idx'),
        ),
        migrations.AddIndex(
            model_name='homework',
            index=models.Index(fields=['teacher', 'assigned_date'], name='homework_teacher_7a1f36_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentwork',
            unique_together={('homework', 'student')},
        ),
        migrations.AlterUniqueTogether(
            name='workloadanalysis',
            unique_together={('class_group', 'date')},
        ),
    ]
