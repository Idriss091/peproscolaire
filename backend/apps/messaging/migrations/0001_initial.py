# Generated by Django 5.0.1 on 2025-06-20 20:31

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('schools', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailForwarding',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('forward_email', models.EmailField(max_length=254, verbose_name='Email de redirection')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('forward_all', models.BooleanField(default=True, verbose_name='Transférer tous les messages')),
                ('forward_priority', models.JSONField(blank=True, default=list, help_text='Liste des priorités de messages à transférer', verbose_name='Priorités à transférer')),
                ('forward_from_types', models.JSONField(blank=True, default=list, help_text="Types d'utilisateurs dont transférer les messages", verbose_name="Types d'expéditeurs")),
                ('last_forwarded', models.DateTimeField(blank=True, null=True, verbose_name='Dernier transfert')),
                ('forward_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de transferts')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='email_forwarding', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Redirection email',
                'verbose_name_plural': 'Redirections email',
                'db_table': 'email_forwardings',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subject', models.CharField(max_length=255, verbose_name='Objet')),
                ('body', models.TextField(verbose_name='Corps du message')),
                ('priority', models.CharField(choices=[('low', 'Faible'), ('normal', 'Normale'), ('high', 'Haute'), ('urgent', 'Urgente')], default='normal', max_length=10, verbose_name='Priorité')),
                ('is_announcement', models.BooleanField(default=False, help_text='Message diffusé à plusieurs destinataires', verbose_name='Annonce')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name="Date d'envoi")),
                ('allow_reply', models.BooleanField(default=True, verbose_name='Autoriser les réponses')),
                ('request_read_receipt', models.BooleanField(default=False, verbose_name='Demander accusé de lecture')),
                ('forward_to_email', models.BooleanField(default=False, verbose_name='Transférer par email')),
                ('parent_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='messaging.message', verbose_name='Message parent')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL, verbose_name='Expéditeur')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'db_table': 'messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MessageAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='messages/attachments/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx', 'jpg', 'jpeg', 'png', 'gif', 'zip', 'txt'])], verbose_name='Fichier')),
                ('filename', models.CharField(max_length=255, verbose_name='Nom du fichier')),
                ('file_size', models.PositiveIntegerField(verbose_name='Taille (octets)')),
                ('content_type', models.CharField(max_length=100, verbose_name='Type MIME')),
                ('is_safe', models.BooleanField(default=True, help_text='Résultat du scan antivirus', verbose_name='Fichier sûr')),
                ('scan_date', models.DateTimeField(blank=True, null=True, verbose_name='Date du scan')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='messaging.message')),
            ],
            options={
                'verbose_name': 'Pièce jointe',
                'verbose_name_plural': 'Pièces jointes',
                'db_table': 'message_attachments',
                'ordering': ['filename'],
            },
        ),
        migrations.CreateModel(
            name='MessageGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Nom du groupe')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_dynamic', models.BooleanField(default=False, verbose_name='Groupe dynamique')),
                ('dynamic_user_type', models.CharField(blank=True, help_text="Type d'utilisateur (student, parent, teacher)", max_length=20)),
                ('last_used', models.DateTimeField(blank=True, null=True, verbose_name='Dernière utilisation')),
                ('use_count', models.PositiveIntegerField(default=0, verbose_name="Nombre d'utilisations")),
                ('dynamic_class', models.ForeignKey(blank=True, help_text='Tous les élèves de cette classe', null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.class')),
                ('members', models.ManyToManyField(related_name='messaging_groups', to=settings.AUTH_USER_MODEL, verbose_name='Membres')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Groupe de destinataires',
                'verbose_name_plural': 'Groupes de destinataires',
                'db_table': 'message_groups',
                'ordering': ['-last_used', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MessageRecipient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('folder', models.CharField(choices=[('inbox', 'Boîte de réception'), ('sent', 'Messages envoyés'), ('draft', 'Brouillons'), ('trash', 'Corbeille'), ('archive', 'Archives')], default='inbox', max_length=20, verbose_name='Dossier')),
                ('is_read', models.BooleanField(default=False, verbose_name='Lu')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Lu le')),
                ('is_starred', models.BooleanField(default=False, verbose_name='Favori')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Archivé')),
                ('labels', models.JSONField(blank=True, default=list, verbose_name='Étiquettes')),
                ('notification_sent', models.BooleanField(default=False, verbose_name='Notification envoyée')),
                ('email_sent', models.BooleanField(default=False, verbose_name='Email envoyé')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='messaging.message')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Destinataire',
                'verbose_name_plural': 'Destinataires',
                'db_table': 'message_recipients',
            },
        ),
        migrations.CreateModel(
            name='MessageTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Nom du modèle')),
                ('category', models.CharField(choices=[('general', 'Général'), ('absence', 'Absence'), ('behavior', 'Comportement'), ('grades', 'Notes'), ('meeting', 'Rendez-vous'), ('info', 'Information')], default='general', max_length=20, verbose_name='Catégorie')),
                ('subject', models.CharField(max_length=255, verbose_name='Objet')),
                ('body', models.TextField(help_text='Utilisez {nom}, {prenom}, {classe} comme variables', verbose_name='Corps du message')),
                ('is_shared', models.BooleanField(default=False, help_text='Disponible pour tous les enseignants', verbose_name='Partagé')),
                ('use_count', models.PositiveIntegerField(default=0, verbose_name="Nombre d'utilisations")),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Modèle de message',
                'verbose_name_plural': 'Modèles de messages',
                'db_table': 'message_templates',
                'ordering': ['-use_count', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('push_enabled', models.BooleanField(default=True, verbose_name='Notifications push')),
                ('push_sound', models.BooleanField(default=True, verbose_name='Son des notifications')),
                ('email_enabled', models.BooleanField(default=True, verbose_name='Notifications email')),
                ('email_frequency', models.CharField(choices=[('instant', 'Immédiat'), ('hourly', 'Toutes les heures'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire')], default='instant', max_length=20, verbose_name='Fréquence des emails')),
                ('quiet_hours_enabled', models.BooleanField(default=False, verbose_name='Heures de silence')),
                ('quiet_hours_start', models.TimeField(blank=True, null=True, verbose_name='Début')),
                ('quiet_hours_end', models.TimeField(blank=True, null=True, verbose_name='Fin')),
                ('notify_urgent_only', models.BooleanField(default=False, verbose_name='Urgents uniquement')),
                ('daily_summary', models.BooleanField(default=False, verbose_name='Résumé quotidien')),
                ('summary_time', models.TimeField(default='18:00', verbose_name='Heure du résumé')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Préférences de notification',
                'verbose_name_plural': 'Préférences de notification',
                'db_table': 'notification_preferences',
            },
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender', 'sent_at'], name='messages_sender__039ac4_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['subject'], name='messages_subject_273006_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='messagegroup',
            unique_together={('owner', 'name')},
        ),
        migrations.AddIndex(
            model_name='messagerecipient',
            index=models.Index(fields=['recipient', 'folder', 'is_read'], name='message_rec_recipie_595cfd_idx'),
        ),
        migrations.AddIndex(
            model_name='messagerecipient',
            index=models.Index(fields=['recipient', 'is_starred'], name='message_rec_recipie_2a6235_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='messagerecipient',
            unique_together={('message', 'recipient')},
        ),
    ]
