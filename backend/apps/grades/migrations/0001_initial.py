# Generated by Django 5.0.1 on 2025-06-20 20:35

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('schools', '0001_initial'),
        ('timetable', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EvaluationType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('short_name', models.CharField(max_length=20, verbose_name='Abréviation')),
                ('default_coefficient', models.DecimalField(decimal_places=1, default=1.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0.1)], verbose_name='Coefficient par défaut')),
                ('color', models.CharField(default='#3498db', max_length=7, verbose_name='Couleur')),
                ('is_graded', models.BooleanField(default=True, help_text='Si non coché, évaluation par compétences uniquement', verbose_name='Noté')),
            ],
            options={
                'verbose_name': "Type d'évaluation",
                'verbose_name_plural': "Types d'évaluation",
                'db_table': 'evaluation_types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Competence',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Code')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('domain', models.CharField(choices=[('languages', 'Langages'), ('methods', 'Méthodes et outils'), ('citizenship', 'Formation de la personne et du citoyen'), ('systems', 'Systèmes naturels et techniques'), ('representations', 'Représentations du monde')], max_length=100, verbose_name='Domaine')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='competences', to='timetable.subject')),
            ],
            options={
                'verbose_name': 'Compétence',
                'verbose_name_plural': 'Compétences',
                'db_table': 'competences',
                'ordering': ['domain', 'name'],
            },
        ),
        migrations.CreateModel(
            name='GradingPeriod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, verbose_name='Nom')),
                ('number', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Numéro')),
                ('start_date', models.DateField(verbose_name='Date de début')),
                ('end_date', models.DateField(verbose_name='Date de fin')),
                ('is_active', models.BooleanField(default=True, verbose_name='Période active')),
                ('council_date', models.DateTimeField(blank=True, null=True, verbose_name='Date du conseil de classe')),
                ('grades_locked', models.BooleanField(default=False, verbose_name='Notes verrouillées')),
                ('bulletins_published', models.BooleanField(default=False, verbose_name='Bulletins publiés')),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grading_periods', to='schools.academicyear')),
            ],
            options={
                'verbose_name': 'Période de notation',
                'verbose_name_plural': 'Périodes de notation',
                'db_table': 'grading_periods',
                'ordering': ['academic_year', 'number'],
                'unique_together': {('academic_year', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('date', models.DateField(verbose_name="Date de l'évaluation")),
                ('max_score', models.DecimalField(decimal_places=2, default=20.0, max_digits=5, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Note maximale')),
                ('coefficient', models.DecimalField(decimal_places=1, default=1.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0.1)], verbose_name='Coefficient')),
                ('is_optional', models.BooleanField(default=False, verbose_name='Évaluation optionnelle')),
                ('counts_in_average', models.BooleanField(default=True, verbose_name='Compte dans la moyenne')),
                ('allow_absent_makeup', models.BooleanField(default=True, verbose_name='Rattrapage autorisé')),
                ('is_graded', models.BooleanField(default=False, verbose_name='Corrigé')),
                ('grades_published', models.BooleanField(default=False, verbose_name='Notes publiées')),
                ('subject_file', models.FileField(blank=True, null=True, upload_to='evaluations/subjects/%Y/%m/', verbose_name='Sujet')),
                ('correction_file', models.FileField(blank=True, null=True, upload_to='evaluations/corrections/%Y/%m/', verbose_name='Correction')),
                ('class_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='schools.class')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='timetable.subject')),
                ('teacher', models.ForeignKey(limit_choices_to={'user_type': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, related_name='created_evaluations', to=settings.AUTH_USER_MODEL)),
                ('evaluation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaluations', to='grades.evaluationtype')),
                ('grading_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='grades.gradingperiod')),
            ],
            options={
                'verbose_name': 'Évaluation',
                'verbose_name_plural': 'Évaluations',
                'db_table': 'evaluations',
                'ordering': ['-date', 'subject'],
            },
        ),
        migrations.CreateModel(
            name='CompetenceEvaluation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mastery_level', models.CharField(choices=[('na', 'Non acquis'), ('ec', "En cours d'acquisition"), ('a', 'Acquis'), ('e', 'Expert')], max_length=2, verbose_name='Niveau de maîtrise')),
                ('comment', models.TextField(blank=True, verbose_name='Commentaire')),
                ('evaluated_at', models.DateTimeField(auto_now_add=True)),
                ('competence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='grades.competence')),
                ('evaluated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evaluated_competences', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='competence_evaluations', to=settings.AUTH_USER_MODEL)),
                ('evaluation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='competence_evaluations', to='grades.evaluation')),
                ('grading_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competence_evaluations', to='grades.gradingperiod')),
            ],
            options={
                'verbose_name': 'Évaluation de compétence',
                'verbose_name_plural': 'Évaluations de compétences',
                'db_table': 'competence_evaluations',
            },
        ),
        migrations.CreateModel(
            name='SubjectAverage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('average', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Moyenne')),
                ('weighted_average', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Moyenne pondérée')),
                ('rank', models.PositiveIntegerField(blank=True, null=True, verbose_name='Rang')),
                ('class_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='Effectif')),
                ('class_average', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Moyenne de classe')),
                ('min_average', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Note minimale')),
                ('max_average', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Note maximale')),
                ('appreciation', models.TextField(blank=True, verbose_name='Appréciation')),
                ('class_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_averages', to='schools.class')),
                ('grading_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_averages', to='grades.gradingperiod')),
                ('student', models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='subject_averages', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_averages', to='timetable.subject')),
            ],
            options={
                'verbose_name': 'Moyenne par matière',
                'verbose_name_plural': 'Moyennes par matière',
                'db_table': 'subject_averages',
                'ordering': ['subject', '-average'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Note')),
                ('is_absent', models.BooleanField(default=False, verbose_name='Absent')),
                ('is_excused', models.BooleanField(default=False, verbose_name='Absence justifiée')),
                ('is_cheating', models.BooleanField(default=False, verbose_name='Tricherie')),
                ('comment', models.TextField(blank=True, verbose_name='Commentaire')),
                ('graded_at', models.DateTimeField(blank=True, null=True, verbose_name='Noté le')),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='grades.evaluation')),
                ('graded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='graded_evaluations', to=settings.AUTH_USER_MODEL, verbose_name='Noté par')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_grades', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='grades', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'db_table': 'grades',
                'ordering': ['student__last_name', 'student__first_name'],
                'unique_together': {('evaluation', 'student')},
            },
        ),
        migrations.CreateModel(
            name='GeneralAverage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('average', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Moyenne générale')),
                ('weighted_average', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Moyenne générale pondérée')),
                ('rank', models.PositiveIntegerField(blank=True, null=True, verbose_name='Rang général')),
                ('class_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='Effectif')),
                ('class_average', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Moyenne de classe')),
                ('council_decision', models.CharField(blank=True, choices=[('passed', 'Passage'), ('passed_conditional', 'Passage avec réserves'), ('repeat', 'Redoublement'), ('pending', 'En attente')], max_length=50, verbose_name='Décision du conseil')),
                ('honor_roll', models.CharField(blank=True, choices=[('felicitations', 'Félicitations'), ('compliments', 'Compliments'), ('encouragements', 'Encouragements'), ('', 'Aucune')], max_length=30, verbose_name='Mention')),
                ('general_appreciation', models.TextField(blank=True, verbose_name='Appréciation générale')),
                ('validated_at', models.DateTimeField(blank=True, null=True, verbose_name='Validé le')),
                ('class_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='general_averages', to='schools.class')),
                ('student', models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='general_averages', to=settings.AUTH_USER_MODEL)),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_averages', to=settings.AUTH_USER_MODEL, verbose_name='Validé par')),
                ('grading_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='general_averages', to='grades.gradingperiod')),
            ],
            options={
                'verbose_name': 'Moyenne générale',
                'verbose_name_plural': 'Moyennes générales',
                'db_table': 'general_averages',
                'ordering': ['-average'],
                'unique_together': {('student', 'grading_period')},
            },
        ),
        migrations.AddIndex(
            model_name='evaluation',
            index=models.Index(fields=['class_group', 'grading_period'], name='evaluations_class_g_1a9b04_idx'),
        ),
        migrations.AddIndex(
            model_name='evaluation',
            index=models.Index(fields=['teacher', 'date'], name='evaluations_teacher_228540_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='competenceevaluation',
            unique_together={('student', 'competence', 'evaluation')},
        ),
        migrations.AlterUniqueTogether(
            name='subjectaverage',
            unique_together={('student', 'subject', 'grading_period')},
        ),
    ]
